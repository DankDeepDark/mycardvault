{"version":3,"sources":["components/pic/logo.png","components/PrivateRoute.js","services/api.js","components/HomePage.js","components/QRScanPage.js","components/Login.js","components/Register.js","components/CardListPage.js","components/AddCardPage.js","components/TransactPage.js","components/Profile.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","PrivateRoute","_ref","children","localStorage","getItem","React","createElement","Navigate","to","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","Authorization","HomePage","nav","useNavigate","isLoggedIn","username","setUsername","useState","useEffect","api","get","then","res","data","catch","console","error","className","Fragment","Link","onClick","handleLogout","removeItem","src","CImg","alt","QRScanPage","result","setResult","hasPermission","setHasPermission","navigator","mediaDevices","getUserMedia","video","QrReader","delay","onError","err","onResult","getText","Login","form","setForm","password","navigate","handleChange","e","target","name","value","onSubmit","async","preventDefault","response","post","setItem","_err$response","_err$response$data","alert","message","placeholder","onChange","required","type","Register","email","fetch","method","body","JSON","stringify","json","ok","Error","CardListPage","cards","setCards","stored","parse","length","map","card","key","id","holder","number","expiry","filtered","filter","c","handleDelete","AddCardPage","setNumber","setHolder","setExpiry","handleSave","newCard","uuidv4","push","TransactPage","useParams","setCard","found","find","Profile","user","setUser","App","BrowserRouter","Routes","Route","path","element","Boolean","window","location","hostname","match","ReactDOM","createRoot","document","getElementById","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c8f4558.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.56acff60.png\";","// components/PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const token = localStorage.getItem('token');\r\n  return token ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",  // Backend bạn sẽ chạy ở cổng 5000\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Tự động gắn token vào headers nếu có\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../components/styleLR.css';\r\nimport CImg from './pic/logo.png';\r\nimport api from '../services/api';\r\n\r\nconst HomePage = () => {\r\n  const nav = useNavigate();\r\n  const isLoggedIn = !!localStorage.getItem('token');\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    api.get('/auth/me')\r\n      .then(res => setUsername(res.data.username))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    nav('/login');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"app-header\">\r\n        <div className=\"header-logo\"><h2>Quản lý Thẻ</h2></div>\r\n        <div className=\"header-user\">\r\n          {isLoggedIn ? (\r\n            <>\r\n              <span>Chào, <strong>{username}</strong></span>\r\n              <Link to=\"/profile\"><button>Tài khoản</button></Link>\r\n              <button onClick={handleLogout}>Đăng xuất</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/login\"><button>Đăng nhập</button></Link>\r\n              <Link to=\"/register\"><button>Đăng ký</button></Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"home-container\">\r\n        <div className=\"menu-links\">\r\n          <ul>\r\n            <li><Link to=\"/scan\">Quét mã QR</Link></li>\r\n            <li><Link to=\"/cards\">Danh sách Thẻ</Link></li>\r\n            <li><Link to=\"/add-card\">Thêm Thẻ Mới</Link></li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"home-main\">\r\n          <img src={CImg} alt=\"Logo\" className=\"home-image\" />\r\n          <p>Chọn chức năng từ menu bên trái để bắt đầu.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\n\r\nconst QRScanPage = () => {\r\n  const [result, setResult] = useState('');\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const handleScan = data => data && setResult(data);\r\n  const handleError = err => console.error(err);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true })\r\n      .then(() => setHasPermission(true))\r\n      .catch(() => setHasPermission(false));\r\n  }, []);\r\n\r\n  if (hasPermission === null) return <div>Đang kiểm tra quyền camera...</div>;\r\n  if (hasPermission === false) return <div>Không có quyền truy cập camera.</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Quét Mã QR</h2>\r\n      <div className=\"qr-scanner\">\r\n        <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onResult={(res) => res && handleScan(res.getText())}\r\n        />\r\n      </div>\r\n      {result && <p>Kết quả: {result}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanPage;","// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../components/styleLR.css';\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', form);\r\n      localStorage.setItem('token', response.data.token);\r\n      navigate('/');\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Lỗi server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-header\">\r\n        <h2>Đăng nhập</h2>\r\n      </div>\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          placeholder=\"Tên người dùng\"\r\n          value={form.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Mật khẩu\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Đăng nhập</button>\r\n      </form>\r\n      <div className=\"auth-footer\">\r\n        Chưa có tài khoản? <Link to=\"/register\">Đăng ký ngay!</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../components/styleLR.css';\r\n\r\nconst Register = () => {\r\n  const [form, setForm] = useState({ username: '', email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(form)\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        throw new Error(data.message || 'Lỗi đăng ký');\r\n      }\r\n\r\n      alert('Đăng ký thành công!');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      alert(err.message || 'Lỗi server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-header\">\r\n        <h2>Đăng ký</h2>\r\n      </div>\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          placeholder=\"Tên người dùng\"\r\n          value={form.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Mật khẩu\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Đăng ký</button>\r\n      </form>\r\n      <div className=\"auth-footer\">\r\n        Đã có tài khoản? <Link to=\"/login\">Đăng nhập ngay!</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CardListPage = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const stored = JSON.parse(localStorage.getItem('cards') || '[]');\r\n    setCards(stored);\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    const filtered = cards.filter(c => c.id !== id);\r\n    localStorage.setItem('cards', JSON.stringify(filtered));\r\n    setCards(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Danh sách Thẻ Visa/Master</h2>\r\n      <button onClick={() => nav('/add-card')}>Thêm Thẻ Mới</button>\r\n      {cards.length === 0 ? (\r\n        <p>Chưa có thẻ nào. Hãy thêm thẻ!</p>\r\n      ) : (\r\n        <ul>\r\n          {cards.map(card => (\r\n            <li key={card.id} className=\"card-item\">\r\n              <div>\r\n                <p><strong>{card.holder}</strong></p>\r\n                <p>{card.number} | Hạn: {card.expiry}</p>\r\n              </div>\r\n              <div>\r\n                <button onClick={() => nav(`/transact/${card.id}`)}>Giao Dịch</button>\r\n                <button onClick={() => handleDelete(card.id)}>Xóa</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardListPage;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddCardPage = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [holder, setHolder] = useState('');\r\n  const [expiry, setExpiry] = useState('');\r\n  const nav = useNavigate();\r\n\r\n  const handleSave = () => {\r\n    const newCard = { id: uuidv4(), number, holder, expiry };\r\n    const cards = JSON.parse(localStorage.getItem('cards') || '[]');\r\n    cards.push(newCard);\r\n    localStorage.setItem('cards', JSON.stringify(cards));\r\n    nav('/cards');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Thêm Thẻ Visa/Master</h2>\r\n      <div className=\"form-group\">\r\n        <label>Số Thẻ</label>\r\n        <input value={number} onChange={e => setNumber(e.target.value)} placeholder=\"1234 5678 9012 3456\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Tên Chủ Thẻ</label>\r\n        <input value={holder} onChange={e => setHolder(e.target.value)} placeholder=\"Nguyen Van A\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Hạn Sử Dụng</label>\r\n        <input type=\"month\" value={expiry} onChange={e => setExpiry(e.target.value)} />\r\n      </div>\r\n      <button onClick={handleSave}>Lưu Thẻ</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCardPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { QrReader } from 'react-qr-reader';\r\n\r\nconst TransactPage = () => {\r\n  const { id } = useParams();\r\n  const [card, setCard] = useState(null);\r\n  const [result, setResult] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const cards = JSON.parse(localStorage.getItem('cards') || '[]');\r\n    const found = cards.find(c => c.id === id);\r\n    if (!found) return navigate('/cards');\r\n    setCard(found);\r\n  }, [id, navigate]);\r\n\r\n  const handleScan = data => data && setResult(data);\r\n  const handleError = err => console.error(err);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Giao Dịch Thẻ</h2>\r\n      {card && (\r\n        <div className=\"card-info\">\r\n          <p><strong>{card.holder}</strong></p>\r\n          <p>{card.number} | Hạn: {card.expiry}</p>\r\n        </div>\r\n      )}\r\n      <div className=\"qr-scanner\">\r\n        <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onResult={(res, err) => res && handleScan(res.getText())}\r\n        />\r\n      </div>\r\n      {result && <p>Kết quả truyền tới POS: {result}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactPage;","import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    api.get('/auth/me')\r\n      .then(res => setUser(res.data))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Thông Tin Tài Khoản</h2>\r\n      <p><strong>Username:</strong> {user.username}</p>\r\n      <p><strong>Email:</strong> {user.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport HomePage from './components/HomePage';\nimport QRScanPage from './components/QRScanPage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport CardListPage from './components/CardListPage';\nimport AddCardPage from './components/AddCardPage';\nimport TransactPage from './components/TransactPage';\nimport Profile from './components/Profile';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/\" element={<PrivateRoute><HomePage /></PrivateRoute>} />\n        <Route path=\"/scan\" element={<PrivateRoute><QRScanPage /></PrivateRoute>} />\n        <Route path=\"/cards\" element={<PrivateRoute><CardListPage /></PrivateRoute>} />\n        <Route path=\"/add-card\" element={<PrivateRoute><AddCardPage /></PrivateRoute>} />\n        <Route path=\"/transact/:id\" element={<PrivateRoute><TransactPage /></PrivateRoute>} />\n        <Route path=\"/profile\" element={<PrivateRoute><Profile /></PrivateRoute>} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}